---
- name: Configure remote host for Docker on Red Hat 9
  hosts: all
  become: true
  vars:
    new_hostname: "docker-compose-host"  # Replace with your desired hostname
    docker_user: "dockeruser"
    docker_repo: "https://github.com/3210snoop3210/docker-compose.git"  # Replace with your repository URL
    docker_compose_file: "docker-compose.yml"  # Replace with your Docker Compose file name

  tasks:

    # Change hostname
    - name: Set new hostname
      ansible.builtin.hostname:
        name: "{{ new_hostname }}"

    # Set timezone to Kyiv
    - name: Set timezone to Europe/Kiev
      community.general.timezone:
        name: Europe/Kiev

    # Create Docker user
    - name: Create a user for Docker
      user:
        name: "{{ docker_user }}"
        groups: docker
        append: yes

    # Add docker repos
    - name: Add Docker repos
      yum_repository:
        name: docker-ce
        description: Docker CE Repository
        baseurl: https://download.docker.com/linux/centos/7/x86_64/stable
        gpgcheck: yes
        gpgkey: https://download.docker.com/linux/centos/gpg

    # Install Docker and Docker Compose
    - name: Install Docker
      yum:
        name: "{{ item }}"
        state: latest
      loop:
        - docker-ce 
        - docker-ce-cli
        - containerd.io
        - docker-buildx-plugin
        - docker-compose-plugin
      become_user: root

    # Configure Docker user to use Docker without sudo
    - name: Add Docker user to docker group
      usermod:
        name: "{{ docker_user }}"
        groups: docker

    # Open ports 22, 80, and 443
    - name: Open firewall ports
      ansible.builtin.firewalld:
        rule: allow
        port: "{{ item }}"
      with_items:
        - 22
        - 80
        - 443

    # Reload firewall to apply changes
    - name: Reload firewall to apply changes
      command: firewall-cmd --reload

    # Clone Docker Compose repository
    - name: Clone Docker Compose repository
      git:
        repo: "{{ docker_repo }}"
        dest: /home/{{ docker_user }}/{{ docker_repo | basename }}"
        version: main
      become_user: "{{ docker_user }}"

    # Run Docker Compose file
    - name: Run Docker Compose file
      become_user: "{{ docker_user }}"
      shell: docker compose up -f /home/{{ docker_user }}/{{ docker_repo | basename }}/{{ docker_compose_file }} -d
      become_user: "{{ docker_user }}"

    # Enable Docker Compose to start on boot
    - name: Enable Docker Compose to start on boot
      systemd:
        name: docker-compose@{{ docker_repo | basename }}
        enabled: yes
        user: "{{ docker_user }}"
        command: docker compose up -f /home/{{ docker_user }}/{{ docker_repo | basename }}/{{ docker_compose_file }} -d
      become_user: root
